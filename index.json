{
  "Readme.html": {
    "href": "Readme.html",
    "title": "SVGImage | SVGImage Documentation",
    "keywords": "SVGImage This is an SVG Image View Control for WPF applications. Initially forked from: SVGImage Control - CodeProject Article Besides the bug fixes, new features are added including the following: Mask/Clip support Support of styles. Simple Animation support. Documentations For the User Manual and API References see Documentation. Framework support The SVGImage control library targets the following frameworks .NET Framework, Version 4.0 .NET Framework, Version 4.5 .NET Framework, Version 4.6 .NET Framework, Version 4.7 .NET Framework, Version 4.8 .NET Core, Version 3.1 .NET 6 ~ 7 License The SVGImage control library is relicensed under MIT License, with permission from the original author."
  },
  "api/SVGImage.SVG.Animation.Animate.html": {
    "href": "api/SVGImage.SVG.Animation.Animate.html",
    "title": "Class Animate | SVGImage Documentation",
    "keywords": "Class Animate Namespace SVGImage.SVG.Animation Assembly DotNetProjects.SVGImage.dll public sealed class Animate : AnimationBase Inheritance object ClipArtElement Shape AnimationBase Animate Inherited Members AnimationBase.Duration Shape.Display Shape.PaintServerKey Shape.RequiredExtensions Shape.RequiredFeatures Shape.Visibility Shape.Stroke Shape.Fill Shape.TextStyle Shape.Opacity Shape.Transform Shape.Parent Shape.ToString() ClipArtElement.Id object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors Animate(SVG, XmlNode, Shape) public Animate(SVG svg, XmlNode node, Shape parent) Parameters svg SVG node XmlNode parent Shape Properties AttributeName public string AttributeName { get; set; } Property Value string From public string From { get; set; } Property Value string RepeatType public string RepeatType { get; set; } Property Value string To public string To { get; set; } Property Value string Values public string Values { get; set; } Property Value string hRef public string hRef { get; set; } Property Value string"
  },
  "api/SVGImage.SVG.Animation.AnimateColor.html": {
    "href": "api/SVGImage.SVG.Animation.AnimateColor.html",
    "title": "Class AnimateColor | SVGImage Documentation",
    "keywords": "Class AnimateColor Namespace SVGImage.SVG.Animation Assembly DotNetProjects.SVGImage.dll public sealed class AnimateColor : AnimationBase Inheritance object ClipArtElement Shape AnimationBase AnimateColor Inherited Members AnimationBase.Duration Shape.Display Shape.PaintServerKey Shape.RequiredExtensions Shape.RequiredFeatures Shape.Visibility Shape.Stroke Shape.Fill Shape.TextStyle Shape.Opacity Shape.Transform Shape.Parent Shape.ToString() ClipArtElement.Id object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors AnimateColor(SVG, XmlNode, Shape) public AnimateColor(SVG svg, XmlNode node, Shape parent) Parameters svg SVG node XmlNode parent Shape"
  },
  "api/SVGImage.SVG.Animation.AnimateMotion.html": {
    "href": "api/SVGImage.SVG.Animation.AnimateMotion.html",
    "title": "Class AnimateMotion | SVGImage Documentation",
    "keywords": "Class AnimateMotion Namespace SVGImage.SVG.Animation Assembly DotNetProjects.SVGImage.dll public sealed class AnimateMotion : AnimationBase Inheritance object ClipArtElement Shape AnimationBase AnimateMotion Inherited Members AnimationBase.Duration Shape.Display Shape.PaintServerKey Shape.RequiredExtensions Shape.RequiredFeatures Shape.Visibility Shape.Stroke Shape.Fill Shape.TextStyle Shape.Opacity Shape.Transform Shape.Parent Shape.ToString() ClipArtElement.Id object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors AnimateMotion(SVG, XmlNode, Shape) public AnimateMotion(SVG svg, XmlNode node, Shape parent) Parameters svg SVG node XmlNode parent Shape"
  },
  "api/SVGImage.SVG.Animation.AnimateTransform.html": {
    "href": "api/SVGImage.SVG.Animation.AnimateTransform.html",
    "title": "Class AnimateTransform | SVGImage Documentation",
    "keywords": "Class AnimateTransform Namespace SVGImage.SVG.Animation Assembly DotNetProjects.SVGImage.dll public sealed class AnimateTransform : AnimationBase Inheritance object ClipArtElement Shape AnimationBase AnimateTransform Inherited Members AnimationBase.Duration Shape.Display Shape.PaintServerKey Shape.RequiredExtensions Shape.RequiredFeatures Shape.Visibility Shape.Stroke Shape.Fill Shape.TextStyle Shape.Opacity Shape.Transform Shape.Parent Shape.ToString() ClipArtElement.Id object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors AnimateTransform(SVG, XmlNode, Shape) public AnimateTransform(SVG svg, XmlNode node, Shape parent) Parameters svg SVG node XmlNode parent Shape Properties AttributeName public string AttributeName { get; set; } Property Value string From public string From { get; set; } Property Value string RepeatType public string RepeatType { get; set; } Property Value string To public string To { get; set; } Property Value string Type public AnimateTransformType Type { get; set; } Property Value AnimateTransformType Values public string Values { get; set; } Property Value string"
  },
  "api/SVGImage.SVG.Animation.AnimateTransformType.html": {
    "href": "api/SVGImage.SVG.Animation.AnimateTransformType.html",
    "title": "Enum AnimateTransformType | SVGImage Documentation",
    "keywords": "Enum AnimateTransformType Namespace SVGImage.SVG.Animation Assembly DotNetProjects.SVGImage.dll public enum AnimateTransformType Fields Rotate = 2 Scale = 1 SkewX = 3 SkewY = 4 Translate = 0"
  },
  "api/SVGImage.SVG.Animation.AnimationBase.html": {
    "href": "api/SVGImage.SVG.Animation.AnimationBase.html",
    "title": "Class AnimationBase | SVGImage Documentation",
    "keywords": "Class AnimationBase Namespace SVGImage.SVG.Animation Assembly DotNetProjects.SVGImage.dll public abstract class AnimationBase : Shape Inheritance object ClipArtElement Shape AnimationBase Derived Animate AnimateColor AnimateMotion AnimateTransform Inherited Members Shape.m_fill Shape.m_stroke Shape.m_textstyle Shape.m_localStyle Shape.Display Shape.PaintServerKey Shape.RequiredExtensions Shape.RequiredFeatures Shape.Visibility Shape.Stroke Shape.Fill Shape.TextStyle Shape.Opacity Shape.Transform Shape.Parent Shape.ParseAtStart(SVG, XmlNode) Shape.ParseLocalStyle(SVG) Shape.Parse(SVG, string, string) Shape.GetFill(SVG) Shape.GetTextStyle(SVG) Shape.ToString() ClipArtElement.Id object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AnimationBase(SVG, XmlNode, Shape) protected AnimationBase(SVG svg, XmlNode node, Shape parent) Parameters svg SVG node XmlNode parent Shape Properties Duration public TimeSpan Duration { get; set; } Property Value TimeSpan"
  },
  "api/SVGImage.SVG.Animation.html": {
    "href": "api/SVGImage.SVG.Animation.html",
    "title": "Namespace SVGImage.SVG.Animation | SVGImage Documentation",
    "keywords": "Namespace SVGImage.SVG.Animation Classes Animate AnimateColor AnimateMotion AnimateTransform AnimationBase Enums AnimateTransformType"
  },
  "api/SVGImage.SVG.ClipArtElement.html": {
    "href": "api/SVGImage.SVG.ClipArtElement.html",
    "title": "Class ClipArtElement | SVGImage Documentation",
    "keywords": "Class ClipArtElement Namespace SVGImage.SVG Assembly DotNetProjects.SVGImage.dll public abstract class ClipArtElement Inheritance object ClipArtElement Derived Shape Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ClipArtElement(XmlNode) protected ClipArtElement(XmlNode node) Parameters node XmlNode Properties Id public string Id { get; } Property Value string"
  },
  "api/SVGImage.SVG.FileLoaders.FileSystemLoader.html": {
    "href": "api/SVGImage.SVG.FileLoaders.FileSystemLoader.html",
    "title": "Class FileSystemLoader | SVGImage Documentation",
    "keywords": "Class FileSystemLoader Namespace SVGImage.SVG.FileLoaders Assembly DotNetProjects.SVGImage.dll public sealed class FileSystemLoader : IExternalFileLoader Inheritance object FileSystemLoader Implements IExternalFileLoader Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Properties Instance public static FileSystemLoader Instance { get; } Property Value FileSystemLoader Methods LoadFile(string, string) public Stream LoadFile(string hRef, string svgFilename) Parameters hRef string svgFilename string Returns Stream"
  },
  "api/SVGImage.SVG.FileLoaders.IExternalFileLoader.html": {
    "href": "api/SVGImage.SVG.FileLoaders.IExternalFileLoader.html",
    "title": "Interface IExternalFileLoader | SVGImage Documentation",
    "keywords": "Interface IExternalFileLoader Namespace SVGImage.SVG.FileLoaders Assembly DotNetProjects.SVGImage.dll public interface IExternalFileLoader Methods LoadFile(string, string) Stream LoadFile(string hRef, string svgFilename) Parameters hRef string svgFilename string Returns Stream"
  },
  "api/SVGImage.SVG.FileLoaders.html": {
    "href": "api/SVGImage.SVG.FileLoaders.html",
    "title": "Namespace SVGImage.SVG.FileLoaders | SVGImage Documentation",
    "keywords": "Namespace SVGImage.SVG.FileLoaders Classes FileSystemLoader Interfaces IExternalFileLoader"
  },
  "api/SVGImage.SVG.Fill.eFillRule.html": {
    "href": "api/SVGImage.SVG.Fill.eFillRule.html",
    "title": "Enum Fill.eFillRule | SVGImage Documentation",
    "keywords": "Enum Fill.eFillRule Namespace SVGImage.SVG Assembly DotNetProjects.SVGImage.dll public enum Fill.eFillRule Fields evenodd = 1 nonzero = 0"
  },
  "api/SVGImage.SVG.Fill.html": {
    "href": "api/SVGImage.SVG.Fill.html",
    "title": "Class Fill | SVGImage Documentation",
    "keywords": "Class Fill Namespace SVGImage.SVG Assembly DotNetProjects.SVGImage.dll public sealed class Fill Inheritance object Fill Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors Fill(SVG) public Fill(SVG svg) Parameters svg SVG Properties FillRule public Fill.eFillRule FillRule { get; set; } Property Value Fill.eFillRule Opacity public double Opacity { get; set; } Property Value double PaintServerKey public string PaintServerKey { get; set; } Property Value string Methods FillBrush(SVG, SVGRender, Shape, double, Rect) public Brush FillBrush(SVG svg, SVGRender svgRender, Shape shape, double elementOpacity, Rect bounds) Parameters svg SVG svgRender SVGRender shape Shape elementOpacity double bounds Rect Returns Brush IsEmpty(SVG) public bool IsEmpty(SVG svg) Parameters svg SVG Returns bool"
  },
  "api/SVGImage.SVG.Filters.Filter.html": {
    "href": "api/SVGImage.SVG.Filters.Filter.html",
    "title": "Class Filter | SVGImage Documentation",
    "keywords": "Class Filter Namespace SVGImage.SVG.Filters Assembly DotNetProjects.SVGImage.dll public sealed class Filter : Group Inheritance object ClipArtElement Shape Group Filter Inherited Members Group.Elements Group.IsSwitch Group.AddToList(SVG, List<Shape>, XmlNode, Shape) Shape.Display Shape.PaintServerKey Shape.RequiredExtensions Shape.RequiredFeatures Shape.Visibility Shape.Stroke Shape.Fill Shape.TextStyle Shape.Opacity Shape.Transform Shape.Parent Shape.ToString() ClipArtElement.Id object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors Filter(SVG, XmlNode, Shape) public Filter(SVG svg, XmlNode node, Shape parent) Parameters svg SVG node XmlNode parent Shape Methods GetBitmapEffect() public BitmapEffect GetBitmapEffect() Returns BitmapEffect"
  },
  "api/SVGImage.SVG.Filters.FilterBaseFe.html": {
    "href": "api/SVGImage.SVG.Filters.FilterBaseFe.html",
    "title": "Class FilterBaseFe | SVGImage Documentation",
    "keywords": "Class FilterBaseFe Namespace SVGImage.SVG.Filters Assembly DotNetProjects.SVGImage.dll public abstract class FilterBaseFe : Shape Inheritance object ClipArtElement Shape FilterBaseFe Derived FilterFeGaussianBlur Inherited Members Shape.m_fill Shape.m_stroke Shape.m_textstyle Shape.m_localStyle Shape.Display Shape.PaintServerKey Shape.RequiredExtensions Shape.RequiredFeatures Shape.Visibility Shape.Stroke Shape.Fill Shape.TextStyle Shape.Opacity Shape.Transform Shape.Parent Shape.ParseAtStart(SVG, XmlNode) Shape.ParseLocalStyle(SVG) Shape.Parse(SVG, string, string) Shape.GetFill(SVG) Shape.GetTextStyle(SVG) Shape.ToString() ClipArtElement.Id object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FilterBaseFe(SVG, XmlNode, Shape) public FilterBaseFe(SVG svg, XmlNode node, Shape parent) Parameters svg SVG node XmlNode parent Shape Methods GetBitmapEffect() public abstract BitmapEffect GetBitmapEffect() Returns BitmapEffect"
  },
  "api/SVGImage.SVG.Filters.FilterFeGaussianBlur.html": {
    "href": "api/SVGImage.SVG.Filters.FilterFeGaussianBlur.html",
    "title": "Class FilterFeGaussianBlur | SVGImage Documentation",
    "keywords": "Class FilterFeGaussianBlur Namespace SVGImage.SVG.Filters Assembly DotNetProjects.SVGImage.dll public class FilterFeGaussianBlur : FilterBaseFe Inheritance object ClipArtElement Shape FilterBaseFe FilterFeGaussianBlur Inherited Members Shape.m_fill Shape.m_stroke Shape.m_textstyle Shape.m_localStyle Shape.Display Shape.PaintServerKey Shape.RequiredExtensions Shape.RequiredFeatures Shape.Visibility Shape.Stroke Shape.Fill Shape.TextStyle Shape.Opacity Shape.Transform Shape.Parent Shape.ParseAtStart(SVG, XmlNode) Shape.ParseLocalStyle(SVG) Shape.Parse(SVG, string, string) Shape.GetFill(SVG) Shape.GetTextStyle(SVG) Shape.ToString() ClipArtElement.Id object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors FilterFeGaussianBlur(SVG, XmlNode, Shape) public FilterFeGaussianBlur(SVG svg, XmlNode node, Shape parent) Parameters svg SVG node XmlNode parent Shape Properties In public string In { get; set; } Property Value string StdDeviationX public double StdDeviationX { get; set; } Property Value double StdDeviationY public double StdDeviationY { get; set; } Property Value double Methods GetBitmapEffect() public override BitmapEffect GetBitmapEffect() Returns BitmapEffect"
  },
  "api/SVGImage.SVG.Filters.html": {
    "href": "api/SVGImage.SVG.Filters.html",
    "title": "Namespace SVGImage.SVG.Filters | SVGImage Documentation",
    "keywords": "Namespace SVGImage.SVG.Filters Classes Filter FilterBaseFe FilterFeGaussianBlur"
  },
  "api/SVGImage.SVG.PaintServers.CurrentColorPaintServer.html": {
    "href": "api/SVGImage.SVG.PaintServers.CurrentColorPaintServer.html",
    "title": "Class CurrentColorPaintServer | SVGImage Documentation",
    "keywords": "Class CurrentColorPaintServer Namespace SVGImage.SVG.PaintServers Assembly DotNetProjects.SVGImage.dll public sealed class CurrentColorPaintServer : PaintServer Inheritance object PaintServer CurrentColorPaintServer Inherited Members PaintServer.Owner PaintServer.GetBrush() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors CurrentColorPaintServer(PaintServerManager) public CurrentColorPaintServer(PaintServerManager owner) Parameters owner PaintServerManager Methods GetBrush(double, SVG, SVGRender, Rect) public override Brush GetBrush(double opacity, SVG svg, SVGRender svgRender, Rect bounds) Parameters opacity double svg SVG svgRender SVGRender bounds Rect Returns Brush"
  },
  "api/SVGImage.SVG.PaintServers.GradientColorPaintServer.html": {
    "href": "api/SVGImage.SVG.PaintServers.GradientColorPaintServer.html",
    "title": "Class GradientColorPaintServer | SVGImage Documentation",
    "keywords": "Class GradientColorPaintServer Namespace SVGImage.SVG.PaintServers Assembly DotNetProjects.SVGImage.dll public abstract class GradientColorPaintServer : PaintServer Inheritance object PaintServer GradientColorPaintServer Derived LinearGradientColorPaintServer RadialGradientColorPaintServer Inherited Members PaintServer.Owner PaintServer.Brush PaintServer.GetBrush(double, SVG, SVGRender, Rect) PaintServer.GetBrush() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors GradientColorPaintServer(PaintServerManager) protected GradientColorPaintServer(PaintServerManager owner) Parameters owner PaintServerManager GradientColorPaintServer(PaintServerManager, XmlNode) protected GradientColorPaintServer(PaintServerManager owner, XmlNode node) Parameters owner PaintServerManager node XmlNode Properties GradientUnits public string GradientUnits { get; } Property Value string Stops public IList<GradientStop> Stops { get; } Property Value IList<GradientStop> Transform public Transform Transform { get; protected set; } Property Value Transform"
  },
  "api/SVGImage.SVG.PaintServers.InheritPaintServer.html": {
    "href": "api/SVGImage.SVG.PaintServers.InheritPaintServer.html",
    "title": "Class InheritPaintServer | SVGImage Documentation",
    "keywords": "Class InheritPaintServer Namespace SVGImage.SVG.PaintServers Assembly DotNetProjects.SVGImage.dll public sealed class InheritPaintServer : PaintServer Inheritance object PaintServer InheritPaintServer Inherited Members PaintServer.Owner PaintServer.GetBrush() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors InheritPaintServer(PaintServerManager) public InheritPaintServer(PaintServerManager owner) Parameters owner PaintServerManager Methods GetBrush(double, SVG, SVGRender, Rect) public override Brush GetBrush(double opacity, SVG svg, SVGRender svgRender, Rect bounds) Parameters opacity double svg SVG svgRender SVGRender bounds Rect Returns Brush"
  },
  "api/SVGImage.SVG.PaintServers.LinearGradientColorPaintServer.html": {
    "href": "api/SVGImage.SVG.PaintServers.LinearGradientColorPaintServer.html",
    "title": "Class LinearGradientColorPaintServer | SVGImage Documentation",
    "keywords": "Class LinearGradientColorPaintServer Namespace SVGImage.SVG.PaintServers Assembly DotNetProjects.SVGImage.dll public sealed class LinearGradientColorPaintServer : GradientColorPaintServer Inheritance object PaintServer GradientColorPaintServer LinearGradientColorPaintServer Inherited Members GradientColorPaintServer.Stops GradientColorPaintServer.Transform GradientColorPaintServer.GradientUnits PaintServer.Owner PaintServer.GetBrush() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors LinearGradientColorPaintServer(PaintServerManager, Brush) public LinearGradientColorPaintServer(PaintServerManager owner, Brush newBrush) Parameters owner PaintServerManager newBrush Brush LinearGradientColorPaintServer(PaintServerManager, XmlNode) public LinearGradientColorPaintServer(PaintServerManager owner, XmlNode node) Parameters owner PaintServerManager node XmlNode Properties X1 public double X1 { get; } Property Value double X2 public double X2 { get; } Property Value double Y1 public double Y1 { get; } Property Value double Y2 public double Y2 { get; } Property Value double Methods GetBrush(double, SVG, SVGRender, Rect) public override Brush GetBrush(double opacity, SVG svg, SVGRender svgRender, Rect bounds) Parameters opacity double svg SVG svgRender SVGRender bounds Rect Returns Brush"
  },
  "api/SVGImage.SVG.PaintServers.PaintServer.html": {
    "href": "api/SVGImage.SVG.PaintServers.PaintServer.html",
    "title": "Class PaintServer | SVGImage Documentation",
    "keywords": "Class PaintServer Namespace SVGImage.SVG.PaintServers Assembly DotNetProjects.SVGImage.dll public class PaintServer Inheritance object PaintServer Derived CurrentColorPaintServer GradientColorPaintServer InheritPaintServer PatternPaintServer SolidColorPaintServer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors PaintServer(PaintServerManager) public PaintServer(PaintServerManager owner) Parameters owner PaintServerManager PaintServer(PaintServerManager, Brush) public PaintServer(PaintServerManager owner, Brush newBrush) Parameters owner PaintServerManager newBrush Brush Fields Brush protected Brush Brush Field Value Brush Properties Owner public PaintServerManager Owner { get; } Property Value PaintServerManager Methods GetBrush() public Brush GetBrush() Returns Brush GetBrush(double, SVG, SVGRender, Rect) public virtual Brush GetBrush(double opacity, SVG svg, SVGRender svgRender, Rect bounds) Parameters opacity double svg SVG svgRender SVGRender bounds Rect Returns Brush"
  },
  "api/SVGImage.SVG.PaintServers.PaintServerManager.html": {
    "href": "api/SVGImage.SVG.PaintServers.PaintServerManager.html",
    "title": "Class PaintServerManager | SVGImage Documentation",
    "keywords": "Class PaintServerManager Namespace SVGImage.SVG.PaintServers Assembly DotNetProjects.SVGImage.dll public sealed class PaintServerManager Inheritance object PaintServerManager Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Methods AddServer(string, PaintServer) public void AddServer(string key, PaintServer server) Parameters key string server PaintServer ContainsServer(string) public bool ContainsServer(string serverKey) Parameters serverKey string Returns bool Create(SVG, XmlNode) public string Create(SVG svg, XmlNode node) Parameters svg SVG node XmlNode Returns string CreateServerFromBrush(string, Brush) public void CreateServerFromBrush(string key, Brush customBrush) Parameters key string customBrush Brush GetServer(string) public PaintServer GetServer(string serverKey) Parameters serverKey string Returns PaintServer GetServers() public Dictionary<string, PaintServer> GetServers() Returns Dictionary<string, PaintServer> KnownColor(string) public static Color KnownColor(string value) Parameters value string Returns Color Parse(string) public string Parse(string value) Parameters value string Returns string ParseHexColor(string) public static Color ParseHexColor(string value) Parameters value string Returns Color"
  },
  "api/SVGImage.SVG.PaintServers.PatternPaintServer.html": {
    "href": "api/SVGImage.SVG.PaintServers.PatternPaintServer.html",
    "title": "Class PatternPaintServer | SVGImage Documentation",
    "keywords": "Class PatternPaintServer Namespace SVGImage.SVG.PaintServers Assembly DotNetProjects.SVGImage.dll public sealed class PatternPaintServer : PaintServer Inheritance object PaintServer PatternPaintServer Inherited Members PaintServer.Owner PaintServer.GetBrush() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors PatternPaintServer(PaintServerManager, SVG, XmlNode) public PatternPaintServer(PaintServerManager owner, SVG svg, XmlNode node) Parameters owner PaintServerManager svg SVG node XmlNode PatternPaintServer(PaintServerManager, Brush) public PatternPaintServer(PaintServerManager owner, Brush newBrush) Parameters owner PaintServerManager newBrush Brush Properties Height public double Height { get; } Property Value double PatternTransform public Transform PatternTransform { get; } Property Value Transform PatternUnits public string PatternUnits { get; } Property Value string Width public double Width { get; } Property Value double X public double X { get; } Property Value double Y public double Y { get; } Property Value double Methods GetBrush(double, SVG, SVGRender, Rect) public override Brush GetBrush(double opacity, SVG svg, SVGRender svgRender, Rect bounds) Parameters opacity double svg SVG svgRender SVGRender bounds Rect Returns Brush"
  },
  "api/SVGImage.SVG.PaintServers.RadialGradientColorPaintServer.html": {
    "href": "api/SVGImage.SVG.PaintServers.RadialGradientColorPaintServer.html",
    "title": "Class RadialGradientColorPaintServer | SVGImage Documentation",
    "keywords": "Class RadialGradientColorPaintServer Namespace SVGImage.SVG.PaintServers Assembly DotNetProjects.SVGImage.dll public sealed class RadialGradientColorPaintServer : GradientColorPaintServer Inheritance object PaintServer GradientColorPaintServer RadialGradientColorPaintServer Inherited Members GradientColorPaintServer.Stops GradientColorPaintServer.Transform GradientColorPaintServer.GradientUnits PaintServer.Owner PaintServer.GetBrush() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors RadialGradientColorPaintServer(PaintServerManager, Brush) public RadialGradientColorPaintServer(PaintServerManager owner, Brush newBrush) Parameters owner PaintServerManager newBrush Brush RadialGradientColorPaintServer(PaintServerManager, XmlNode) public RadialGradientColorPaintServer(PaintServerManager owner, XmlNode node) Parameters owner PaintServerManager node XmlNode Properties CX public double CX { get; } Property Value double CY public double CY { get; } Property Value double FX public double FX { get; } Property Value double FY public double FY { get; } Property Value double R public double R { get; } Property Value double Methods GetBrush(double, SVG, SVGRender, Rect) public override Brush GetBrush(double opacity, SVG svg, SVGRender svgRender, Rect bounds) Parameters opacity double svg SVG svgRender SVGRender bounds Rect Returns Brush"
  },
  "api/SVGImage.SVG.PaintServers.SolidColorPaintServer.html": {
    "href": "api/SVGImage.SVG.PaintServers.SolidColorPaintServer.html",
    "title": "Class SolidColorPaintServer | SVGImage Documentation",
    "keywords": "Class SolidColorPaintServer Namespace SVGImage.SVG.PaintServers Assembly DotNetProjects.SVGImage.dll public sealed class SolidColorPaintServer : PaintServer Inheritance object PaintServer SolidColorPaintServer Inherited Members PaintServer.Owner PaintServer.GetBrush() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors SolidColorPaintServer(PaintServerManager, Brush) public SolidColorPaintServer(PaintServerManager owner, Brush newBrush) Parameters owner PaintServerManager newBrush Brush SolidColorPaintServer(PaintServerManager, Color) public SolidColorPaintServer(PaintServerManager owner, Color c) Parameters owner PaintServerManager c Color Properties Color public Color Color { get; set; } Property Value Color Methods GetBrush(double, SVG, SVGRender, Rect) public override Brush GetBrush(double opacity, SVG svg, SVGRender svgRender, Rect bounds) Parameters opacity double svg SVG svgRender SVGRender bounds Rect Returns Brush"
  },
  "api/SVGImage.SVG.PaintServers.html": {
    "href": "api/SVGImage.SVG.PaintServers.html",
    "title": "Namespace SVGImage.SVG.PaintServers | SVGImage Documentation",
    "keywords": "Namespace SVGImage.SVG.PaintServers Classes CurrentColorPaintServer GradientColorPaintServer InheritPaintServer LinearGradientColorPaintServer PaintServer PaintServerManager PatternPaintServer RadialGradientColorPaintServer SolidColorPaintServer"
  },
  "api/SVGImage.SVG.PathShape.html": {
    "href": "api/SVGImage.SVG.PathShape.html",
    "title": "Class PathShape | SVGImage Documentation",
    "keywords": "Class PathShape Namespace SVGImage.SVG Assembly DotNetProjects.SVGImage.dll public sealed class PathShape : Shape Inheritance object ClipArtElement Shape PathShape Inherited Members Shape.Display Shape.PaintServerKey Shape.RequiredExtensions Shape.RequiredFeatures Shape.Visibility Shape.Stroke Shape.TextStyle Shape.Opacity Shape.Transform Shape.Parent Shape.ToString() ClipArtElement.Id object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors PathShape(SVG, XmlNode, Shape) public PathShape(SVG svg, XmlNode node, Shape parent) Parameters svg SVG node XmlNode parent Shape Properties ClosePath public bool ClosePath { get; } Property Value bool Data public string Data { get; } Property Value string Fill public override Fill Fill { get; } Property Value Fill"
  },
  "api/SVGImage.SVG.SVG.html": {
    "href": "api/SVGImage.SVG.SVG.html",
    "title": "Class SVG | SVGImage Documentation",
    "keywords": "Class SVG Namespace SVGImage.SVG Assembly DotNetProjects.SVGImage.dll This is the class that reads and parses the XML file. public class SVG Inheritance object SVG Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SVG() public SVG() SVG(IExternalFileLoader) public SVG(IExternalFileLoader externalFileLoader) Parameters externalFileLoader IExternalFileLoader SVG(Stream) public SVG(Stream stream) Parameters stream Stream SVG(Stream, IExternalFileLoader) public SVG(Stream stream, IExternalFileLoader externalFileLoader) Parameters stream Stream externalFileLoader IExternalFileLoader SVG(string) public SVG(string filename) Parameters filename string SVG(string, IExternalFileLoader) public SVG(string filename, IExternalFileLoader externalFileLoader) Parameters filename string externalFileLoader IExternalFileLoader SVG(XmlNode, IExternalFileLoader) public SVG(XmlNode svgTag, IExternalFileLoader externalFileLoader) Parameters svgTag XmlNode externalFileLoader IExternalFileLoader Properties CustomBrushes public Dictionary<string, Brush> CustomBrushes { get; set; } Property Value Dictionary<string, Brush> Elements public IList<Shape> Elements { get; } Property Value IList<Shape> ExternalFileLoader public IExternalFileLoader ExternalFileLoader { get; set; } Property Value IExternalFileLoader Filename public string Filename { get; } Property Value string PaintServers public PaintServerManager PaintServers { get; } Property Value PaintServerManager Size public Size Size { get; set; } Property Value Size ViewBox public Rect? ViewBox { get; set; } Property Value Rect? Methods AddShape(string, Shape) public void AddShape(string id, Shape shape) Parameters id string shape Shape GetShape(string) public Shape GetShape(string id) Parameters id string Returns Shape Load(Stream) public void Load(Stream stream) Parameters stream Stream Load(TextReader) public void Load(TextReader txtReader) Parameters txtReader TextReader Load(string) public void Load(string filePath) Parameters filePath string Load(Uri) public void Load(Uri fileUri) Parameters fileUri Uri Load(XmlReader) public void Load(XmlReader xmlReader) Parameters xmlReader XmlReader LoadXml(string) public void LoadXml(string fileXml) Parameters fileXml string"
  },
  "api/SVGImage.SVG.SVGImage.eSizeType.html": {
    "href": "api/SVGImage.SVG.SVGImage.eSizeType.html",
    "title": "Enum SVGImage.eSizeType | SVGImage Documentation",
    "keywords": "Enum SVGImage.eSizeType Namespace SVGImage.SVG Assembly DotNetProjects.SVGImage.dll This controls how the image is stretched to fill the control, public enum SVGImage.eSizeType Fields ContentToSizeNoStretch = 1 The image is scaled to fit the control without any stretching. Either X or Y direction will be scaled to fill the entire width or height. ContentToSizeStretch = 2 The image will be stretched to fill the entire width and height. None = 0 The image is not scaled. The image location is translated so the top left corner of the image bounding box is moved to the top left corner of the image control. SizeToContent = 3 The control will be resized to fit the un-scaled image. If the image is larger than the maximum size for the control, the control is set to maximum size and the image is scaled. ViewBoxToSizeNoStretch = 4 Not the content of the image but its viewbox is scaled to fit the control without any stretching. Either X or Y direction will be scaled to fill the entire width or height."
  },
  "api/SVGImage.SVG.SVGImage.html": {
    "href": "api/SVGImage.SVG.SVGImage.html",
    "title": "Class SVGImage | SVGImage Documentation",
    "keywords": "Class SVGImage Namespace SVGImage.SVG Assembly DotNetProjects.SVGImage.dll This is the SVG image view control. The image control can either load the image from a file SetImage(string) or by setting the Drawing object through SetImage(Drawing), which allows multiple controls to share the same drawing instance. public class SVGImage : Control, IAnimatable, IFrameworkInputElement, IInputElement, ISupportInitialize, IQueryAmbient, IUriContext Inheritance object DispatcherObject DependencyObject Visual UIElement FrameworkElement Control SVGImage Implements IAnimatable IFrameworkInputElement IInputElement ISupportInitialize IQueryAmbient IUriContext Inherited Members Control.BorderBrushProperty Control.BorderThicknessProperty Control.BackgroundProperty Control.ForegroundProperty Control.FontFamilyProperty Control.FontSizeProperty Control.FontStretchProperty Control.FontStyleProperty Control.FontWeightProperty Control.HorizontalContentAlignmentProperty Control.VerticalContentAlignmentProperty Control.TabIndexProperty Control.IsTabStopProperty Control.PaddingProperty Control.TemplateProperty Control.PreviewMouseDoubleClickEvent Control.MouseDoubleClickEvent Control.OnTemplateChanged(ControlTemplate, ControlTemplate) Control.ToString() Control.OnPreviewMouseDoubleClick(MouseButtonEventArgs) Control.OnMouseDoubleClick(MouseButtonEventArgs) Control.BorderBrush Control.BorderThickness Control.Background Control.Foreground Control.FontFamily Control.FontSize Control.FontStretch Control.FontStyle Control.FontWeight Control.HorizontalContentAlignment Control.VerticalContentAlignment Control.TabIndex Control.IsTabStop Control.Padding Control.Template Control.HandlesScrolling Control.PreviewMouseDoubleClick Control.MouseDoubleClick FrameworkElement.StyleProperty FrameworkElement.OverridesDefaultStyleProperty FrameworkElement.UseLayoutRoundingProperty FrameworkElement.DefaultStyleKeyProperty FrameworkElement.DataContextProperty FrameworkElement.BindingGroupProperty FrameworkElement.LanguageProperty FrameworkElement.NameProperty FrameworkElement.TagProperty FrameworkElement.InputScopeProperty FrameworkElement.RequestBringIntoViewEvent FrameworkElement.SizeChangedEvent FrameworkElement.ActualWidthProperty FrameworkElement.ActualHeightProperty FrameworkElement.LayoutTransformProperty FrameworkElement.WidthProperty FrameworkElement.MinWidthProperty FrameworkElement.MaxWidthProperty FrameworkElement.HeightProperty FrameworkElement.MinHeightProperty FrameworkElement.MaxHeightProperty FrameworkElement.FlowDirectionProperty FrameworkElement.MarginProperty FrameworkElement.HorizontalAlignmentProperty FrameworkElement.VerticalAlignmentProperty FrameworkElement.FocusVisualStyleProperty FrameworkElement.CursorProperty FrameworkElement.ForceCursorProperty FrameworkElement.LoadedEvent FrameworkElement.UnloadedEvent FrameworkElement.ToolTipProperty FrameworkElement.ContextMenuProperty FrameworkElement.ToolTipOpeningEvent FrameworkElement.ToolTipClosingEvent FrameworkElement.ContextMenuOpeningEvent FrameworkElement.ContextMenuClosingEvent FrameworkElement.OnStyleChanged(Style, Style) FrameworkElement.ParentLayoutInvalidated(UIElement) FrameworkElement.ApplyTemplate() FrameworkElement.OnApplyTemplate() FrameworkElement.BeginStoryboard(Storyboard) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior) FrameworkElement.BeginStoryboard(Storyboard, HandoffBehavior, bool) FrameworkElement.GetVisualChild(int) FrameworkElement.GetTemplateChild(string) FrameworkElement.FindResource(object) FrameworkElement.TryFindResource(object) FrameworkElement.SetResourceReference(DependencyProperty, object) FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs) FrameworkElement.OnVisualParentChanged(DependencyObject) FrameworkElement.GetBindingExpression(DependencyProperty) FrameworkElement.SetBinding(DependencyProperty, BindingBase) FrameworkElement.SetBinding(DependencyProperty, string) FrameworkElement.GetUIParentCore() FrameworkElement.BringIntoView() FrameworkElement.BringIntoView(Rect) FrameworkElement.GetFlowDirection(DependencyObject) FrameworkElement.SetFlowDirection(DependencyObject, FlowDirection) FrameworkElement.MeasureCore(Size) FrameworkElement.ArrangeCore(Rect) FrameworkElement.GetLayoutClip(Size) FrameworkElement.MoveFocus(TraversalRequest) FrameworkElement.PredictFocus(FocusNavigationDirection) FrameworkElement.OnGotFocus(RoutedEventArgs) FrameworkElement.BeginInit() FrameworkElement.EndInit() FrameworkElement.OnToolTipOpening(ToolTipEventArgs) FrameworkElement.OnToolTipClosing(ToolTipEventArgs) FrameworkElement.OnContextMenuOpening(ContextMenuEventArgs) FrameworkElement.OnContextMenuClosing(ContextMenuEventArgs) FrameworkElement.RegisterName(string, object) FrameworkElement.UnregisterName(string) FrameworkElement.FindName(string) FrameworkElement.AddLogicalChild(object) FrameworkElement.RemoveLogicalChild(object) FrameworkElement.Style FrameworkElement.OverridesDefaultStyle FrameworkElement.UseLayoutRounding FrameworkElement.DefaultStyleKey FrameworkElement.Triggers FrameworkElement.TemplatedParent FrameworkElement.VisualChildrenCount FrameworkElement.Resources FrameworkElement.InheritanceBehavior FrameworkElement.DataContext FrameworkElement.BindingGroup FrameworkElement.Language FrameworkElement.Name FrameworkElement.Tag FrameworkElement.InputScope FrameworkElement.ActualWidth FrameworkElement.ActualHeight FrameworkElement.LayoutTransform FrameworkElement.Width FrameworkElement.MinWidth FrameworkElement.MaxWidth FrameworkElement.Height FrameworkElement.MinHeight FrameworkElement.MaxHeight FrameworkElement.FlowDirection FrameworkElement.Margin FrameworkElement.HorizontalAlignment FrameworkElement.VerticalAlignment FrameworkElement.FocusVisualStyle FrameworkElement.Cursor FrameworkElement.ForceCursor FrameworkElement.IsInitialized FrameworkElement.IsLoaded FrameworkElement.ToolTip FrameworkElement.ContextMenu FrameworkElement.Parent FrameworkElement.LogicalChildren FrameworkElement.TargetUpdated FrameworkElement.SourceUpdated FrameworkElement.DataContextChanged FrameworkElement.RequestBringIntoView FrameworkElement.SizeChanged FrameworkElement.Initialized FrameworkElement.Loaded FrameworkElement.Unloaded FrameworkElement.ToolTipOpening FrameworkElement.ToolTipClosing FrameworkElement.ContextMenuOpening FrameworkElement.ContextMenuClosing UIElement.PreviewMouseDownEvent UIElement.MouseDownEvent UIElement.PreviewMouseUpEvent UIElement.MouseUpEvent UIElement.PreviewMouseLeftButtonDownEvent UIElement.MouseLeftButtonDownEvent UIElement.PreviewMouseLeftButtonUpEvent UIElement.MouseLeftButtonUpEvent UIElement.PreviewMouseRightButtonDownEvent UIElement.MouseRightButtonDownEvent UIElement.PreviewMouseRightButtonUpEvent UIElement.MouseRightButtonUpEvent UIElement.PreviewMouseMoveEvent UIElement.MouseMoveEvent UIElement.PreviewMouseWheelEvent UIElement.MouseWheelEvent UIElement.MouseEnterEvent UIElement.MouseLeaveEvent UIElement.GotMouseCaptureEvent UIElement.LostMouseCaptureEvent UIElement.QueryCursorEvent UIElement.PreviewStylusDownEvent UIElement.StylusDownEvent UIElement.PreviewStylusUpEvent UIElement.StylusUpEvent UIElement.PreviewStylusMoveEvent UIElement.StylusMoveEvent UIElement.PreviewStylusInAirMoveEvent UIElement.StylusInAirMoveEvent UIElement.StylusEnterEvent UIElement.StylusLeaveEvent UIElement.PreviewStylusInRangeEvent UIElement.StylusInRangeEvent UIElement.PreviewStylusOutOfRangeEvent UIElement.StylusOutOfRangeEvent UIElement.PreviewStylusSystemGestureEvent UIElement.StylusSystemGestureEvent UIElement.GotStylusCaptureEvent UIElement.LostStylusCaptureEvent UIElement.StylusButtonDownEvent UIElement.StylusButtonUpEvent UIElement.PreviewStylusButtonDownEvent UIElement.PreviewStylusButtonUpEvent UIElement.PreviewKeyDownEvent UIElement.KeyDownEvent UIElement.PreviewKeyUpEvent UIElement.KeyUpEvent UIElement.PreviewGotKeyboardFocusEvent UIElement.GotKeyboardFocusEvent UIElement.PreviewLostKeyboardFocusEvent UIElement.LostKeyboardFocusEvent UIElement.PreviewTextInputEvent UIElement.TextInputEvent UIElement.PreviewQueryContinueDragEvent UIElement.QueryContinueDragEvent UIElement.PreviewGiveFeedbackEvent UIElement.GiveFeedbackEvent UIElement.PreviewDragEnterEvent UIElement.DragEnterEvent UIElement.PreviewDragOverEvent UIElement.DragOverEvent UIElement.PreviewDragLeaveEvent UIElement.DragLeaveEvent UIElement.PreviewDropEvent UIElement.DropEvent UIElement.PreviewTouchDownEvent UIElement.TouchDownEvent UIElement.PreviewTouchMoveEvent UIElement.TouchMoveEvent UIElement.PreviewTouchUpEvent UIElement.TouchUpEvent UIElement.GotTouchCaptureEvent UIElement.LostTouchCaptureEvent UIElement.TouchEnterEvent UIElement.TouchLeaveEvent UIElement.IsMouseDirectlyOverProperty UIElement.IsMouseOverProperty UIElement.IsStylusOverProperty UIElement.IsKeyboardFocusWithinProperty UIElement.IsMouseCapturedProperty UIElement.IsMouseCaptureWithinProperty UIElement.IsStylusDirectlyOverProperty UIElement.IsStylusCapturedProperty UIElement.IsStylusCaptureWithinProperty UIElement.IsKeyboardFocusedProperty UIElement.AreAnyTouchesDirectlyOverProperty UIElement.AreAnyTouchesOverProperty UIElement.AreAnyTouchesCapturedProperty UIElement.AreAnyTouchesCapturedWithinProperty UIElement.AllowDropProperty UIElement.RenderTransformProperty UIElement.RenderTransformOriginProperty UIElement.OpacityProperty UIElement.OpacityMaskProperty UIElement.BitmapEffectProperty UIElement.EffectProperty UIElement.BitmapEffectInputProperty UIElement.CacheModeProperty UIElement.UidProperty UIElement.VisibilityProperty UIElement.ClipToBoundsProperty UIElement.ClipProperty UIElement.SnapsToDevicePixelsProperty UIElement.GotFocusEvent UIElement.LostFocusEvent UIElement.IsFocusedProperty UIElement.IsEnabledProperty UIElement.IsHitTestVisibleProperty UIElement.IsVisibleProperty UIElement.FocusableProperty UIElement.IsManipulationEnabledProperty UIElement.ManipulationStartingEvent UIElement.ManipulationStartedEvent UIElement.ManipulationDeltaEvent UIElement.ManipulationInertiaStartingEvent UIElement.ManipulationBoundaryFeedbackEvent UIElement.ManipulationCompletedEvent UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock) UIElement.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline) UIElement.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior) UIElement.GetAnimationBaseValue(DependencyProperty) UIElement.RaiseEvent(RoutedEventArgs) UIElement.AddHandler(RoutedEvent, Delegate) UIElement.AddHandler(RoutedEvent, Delegate, bool) UIElement.RemoveHandler(RoutedEvent, Delegate) UIElement.AddToEventRoute(EventRoute, RoutedEventArgs) UIElement.OnPreviewMouseDown(MouseButtonEventArgs) UIElement.OnMouseDown(MouseButtonEventArgs) UIElement.OnPreviewMouseUp(MouseButtonEventArgs) UIElement.OnMouseUp(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnMouseLeftButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnMouseLeftButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnMouseRightButtonDown(MouseButtonEventArgs) UIElement.OnPreviewMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnMouseRightButtonUp(MouseButtonEventArgs) UIElement.OnPreviewMouseMove(MouseEventArgs) UIElement.OnMouseMove(MouseEventArgs) UIElement.OnPreviewMouseWheel(MouseWheelEventArgs) UIElement.OnMouseWheel(MouseWheelEventArgs) UIElement.OnMouseEnter(MouseEventArgs) UIElement.OnMouseLeave(MouseEventArgs) UIElement.OnGotMouseCapture(MouseEventArgs) UIElement.OnLostMouseCapture(MouseEventArgs) UIElement.OnQueryCursor(QueryCursorEventArgs) UIElement.OnPreviewStylusDown(StylusDownEventArgs) UIElement.OnStylusDown(StylusDownEventArgs) UIElement.OnPreviewStylusUp(StylusEventArgs) UIElement.OnStylusUp(StylusEventArgs) UIElement.OnPreviewStylusMove(StylusEventArgs) UIElement.OnStylusMove(StylusEventArgs) UIElement.OnPreviewStylusInAirMove(StylusEventArgs) UIElement.OnStylusInAirMove(StylusEventArgs) UIElement.OnStylusEnter(StylusEventArgs) UIElement.OnStylusLeave(StylusEventArgs) UIElement.OnPreviewStylusInRange(StylusEventArgs) UIElement.OnStylusInRange(StylusEventArgs) UIElement.OnPreviewStylusOutOfRange(StylusEventArgs) UIElement.OnStylusOutOfRange(StylusEventArgs) UIElement.OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnStylusSystemGesture(StylusSystemGestureEventArgs) UIElement.OnGotStylusCapture(StylusEventArgs) UIElement.OnLostStylusCapture(StylusEventArgs) UIElement.OnStylusButtonDown(StylusButtonEventArgs) UIElement.OnStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonDown(StylusButtonEventArgs) UIElement.OnPreviewStylusButtonUp(StylusButtonEventArgs) UIElement.OnPreviewKeyDown(KeyEventArgs) UIElement.OnKeyDown(KeyEventArgs) UIElement.OnPreviewKeyUp(KeyEventArgs) UIElement.OnKeyUp(KeyEventArgs) UIElement.OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnGotKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnLostKeyboardFocus(KeyboardFocusChangedEventArgs) UIElement.OnPreviewTextInput(TextCompositionEventArgs) UIElement.OnTextInput(TextCompositionEventArgs) UIElement.OnPreviewQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnQueryContinueDrag(QueryContinueDragEventArgs) UIElement.OnPreviewGiveFeedback(GiveFeedbackEventArgs) UIElement.OnGiveFeedback(GiveFeedbackEventArgs) UIElement.OnPreviewDragEnter(DragEventArgs) UIElement.OnDragEnter(DragEventArgs) UIElement.OnPreviewDragOver(DragEventArgs) UIElement.OnDragOver(DragEventArgs) UIElement.OnPreviewDragLeave(DragEventArgs) UIElement.OnDragLeave(DragEventArgs) UIElement.OnPreviewDrop(DragEventArgs) UIElement.OnDrop(DragEventArgs) UIElement.OnPreviewTouchDown(TouchEventArgs) UIElement.OnTouchDown(TouchEventArgs) UIElement.OnPreviewTouchMove(TouchEventArgs) UIElement.OnTouchMove(TouchEventArgs) UIElement.OnPreviewTouchUp(TouchEventArgs) UIElement.OnTouchUp(TouchEventArgs) UIElement.OnGotTouchCapture(TouchEventArgs) UIElement.OnLostTouchCapture(TouchEventArgs) UIElement.OnTouchEnter(TouchEventArgs) UIElement.OnTouchLeave(TouchEventArgs) UIElement.OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs) UIElement.OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs) UIElement.InvalidateMeasure() UIElement.InvalidateArrange() UIElement.InvalidateVisual() UIElement.OnChildDesiredSizeChanged(UIElement) UIElement.Measure(Size) UIElement.Arrange(Rect) UIElement.UpdateLayout() UIElement.TranslatePoint(Point, UIElement) UIElement.InputHitTest(Point) UIElement.CaptureMouse() UIElement.ReleaseMouseCapture() UIElement.CaptureStylus() UIElement.ReleaseStylusCapture() UIElement.Focus() UIElement.OnAccessKey(AccessKeyEventArgs) UIElement.HitTestCore(PointHitTestParameters) UIElement.HitTestCore(GeometryHitTestParameters) UIElement.OnLostFocus(RoutedEventArgs) UIElement.OnCreateAutomationPeer() UIElement.OnManipulationStarting(ManipulationStartingEventArgs) UIElement.OnManipulationStarted(ManipulationStartedEventArgs) UIElement.OnManipulationDelta(ManipulationDeltaEventArgs) UIElement.OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs) UIElement.OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs) UIElement.OnManipulationCompleted(ManipulationCompletedEventArgs) UIElement.CaptureTouch(TouchDevice) UIElement.ReleaseTouchCapture(TouchDevice) UIElement.ReleaseAllTouchCaptures() UIElement.HasAnimatedProperties UIElement.InputBindings UIElement.CommandBindings UIElement.AllowDrop UIElement.StylusPlugIns UIElement.DesiredSize UIElement.IsMeasureValid UIElement.IsArrangeValid UIElement.RenderSize UIElement.RenderTransform UIElement.RenderTransformOrigin UIElement.IsMouseDirectlyOver UIElement.IsMouseOver UIElement.IsStylusOver UIElement.IsKeyboardFocusWithin UIElement.IsMouseCaptured UIElement.IsMouseCaptureWithin UIElement.IsStylusDirectlyOver UIElement.IsStylusCaptured UIElement.IsStylusCaptureWithin UIElement.IsKeyboardFocused UIElement.IsInputMethodEnabled UIElement.Opacity UIElement.OpacityMask UIElement.BitmapEffect UIElement.Effect UIElement.BitmapEffectInput UIElement.CacheMode UIElement.Uid UIElement.Visibility UIElement.ClipToBounds UIElement.Clip UIElement.SnapsToDevicePixels UIElement.IsFocused UIElement.IsEnabled UIElement.IsEnabledCore UIElement.IsHitTestVisible UIElement.IsVisible UIElement.Focusable UIElement.PersistId UIElement.IsManipulationEnabled UIElement.AreAnyTouchesOver UIElement.AreAnyTouchesDirectlyOver UIElement.AreAnyTouchesCapturedWithin UIElement.AreAnyTouchesCaptured UIElement.TouchesCaptured UIElement.TouchesCapturedWithin UIElement.TouchesOver UIElement.TouchesDirectlyOver UIElement.PreviewMouseDown UIElement.MouseDown UIElement.PreviewMouseUp UIElement.MouseUp UIElement.PreviewMouseLeftButtonDown UIElement.MouseLeftButtonDown UIElement.PreviewMouseLeftButtonUp UIElement.MouseLeftButtonUp UIElement.PreviewMouseRightButtonDown UIElement.MouseRightButtonDown UIElement.PreviewMouseRightButtonUp UIElement.MouseRightButtonUp UIElement.PreviewMouseMove UIElement.MouseMove UIElement.PreviewMouseWheel UIElement.MouseWheel UIElement.MouseEnter UIElement.MouseLeave UIElement.GotMouseCapture UIElement.LostMouseCapture UIElement.QueryCursor UIElement.PreviewStylusDown UIElement.StylusDown UIElement.PreviewStylusUp UIElement.StylusUp UIElement.PreviewStylusMove UIElement.StylusMove UIElement.PreviewStylusInAirMove UIElement.StylusInAirMove UIElement.StylusEnter UIElement.StylusLeave UIElement.PreviewStylusInRange UIElement.StylusInRange UIElement.PreviewStylusOutOfRange UIElement.StylusOutOfRange UIElement.PreviewStylusSystemGesture UIElement.StylusSystemGesture UIElement.GotStylusCapture UIElement.LostStylusCapture UIElement.StylusButtonDown UIElement.StylusButtonUp UIElement.PreviewStylusButtonDown UIElement.PreviewStylusButtonUp UIElement.PreviewKeyDown UIElement.KeyDown UIElement.PreviewKeyUp UIElement.KeyUp UIElement.PreviewGotKeyboardFocus UIElement.GotKeyboardFocus UIElement.PreviewLostKeyboardFocus UIElement.LostKeyboardFocus UIElement.PreviewTextInput UIElement.TextInput UIElement.PreviewQueryContinueDrag UIElement.QueryContinueDrag UIElement.PreviewGiveFeedback UIElement.GiveFeedback UIElement.PreviewDragEnter UIElement.DragEnter UIElement.PreviewDragOver UIElement.DragOver UIElement.PreviewDragLeave UIElement.DragLeave UIElement.PreviewDrop UIElement.Drop UIElement.PreviewTouchDown UIElement.TouchDown UIElement.PreviewTouchMove UIElement.TouchMove UIElement.PreviewTouchUp UIElement.TouchUp UIElement.GotTouchCapture UIElement.LostTouchCapture UIElement.TouchEnter UIElement.TouchLeave UIElement.IsMouseDirectlyOverChanged UIElement.IsKeyboardFocusWithinChanged UIElement.IsMouseCapturedChanged UIElement.IsMouseCaptureWithinChanged UIElement.IsStylusDirectlyOverChanged UIElement.IsStylusCapturedChanged UIElement.IsStylusCaptureWithinChanged UIElement.IsKeyboardFocusedChanged UIElement.LayoutUpdated UIElement.GotFocus UIElement.LostFocus UIElement.IsEnabledChanged UIElement.IsHitTestVisibleChanged UIElement.IsVisibleChanged UIElement.FocusableChanged UIElement.ManipulationStarting UIElement.ManipulationStarted UIElement.ManipulationDelta UIElement.ManipulationInertiaStarting UIElement.ManipulationBoundaryFeedback UIElement.ManipulationCompleted Visual.AddVisualChild(Visual) Visual.RemoveVisualChild(Visual) Visual.OnVisualChildrenChanged(DependencyObject, DependencyObject) Visual.IsAncestorOf(DependencyObject) Visual.IsDescendantOf(DependencyObject) Visual.FindCommonVisualAncestor(DependencyObject) Visual.TransformToAncestor(Visual) Visual.TransformToAncestor(Visual3D) Visual.TransformToDescendant(Visual) Visual.TransformToVisual(Visual) Visual.PointToScreen(Point) Visual.PointFromScreen(Point) Visual.VisualParent Visual.VisualTransform Visual.VisualEffect Visual.VisualBitmapEffect Visual.VisualBitmapEffectInput Visual.VisualCacheMode Visual.VisualScrollableAreaClip Visual.VisualClip Visual.VisualOffset Visual.VisualOpacity Visual.VisualEdgeMode Visual.VisualBitmapScalingMode Visual.VisualClearTypeHint Visual.VisualTextRenderingMode Visual.VisualTextHintingMode Visual.VisualOpacityMask Visual.VisualXSnappingGuidelines Visual.VisualYSnappingGuidelines DependencyObject.Equals(object) DependencyObject.GetHashCode() DependencyObject.GetValue(DependencyProperty) DependencyObject.SetValue(DependencyProperty, object) DependencyObject.SetCurrentValue(DependencyProperty, object) DependencyObject.SetValue(DependencyPropertyKey, object) DependencyObject.ClearValue(DependencyProperty) DependencyObject.ClearValue(DependencyPropertyKey) DependencyObject.CoerceValue(DependencyProperty) DependencyObject.InvalidateProperty(DependencyProperty) DependencyObject.ShouldSerializeProperty(DependencyProperty) DependencyObject.ReadLocalValue(DependencyProperty) DependencyObject.GetLocalValueEnumerator() DependencyObject.DependencyObjectType DependencyObject.IsSealed DispatcherObject.Dispatcher object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors SVGImage() public SVGImage() Fields CustomBrushesProperty public static readonly DependencyProperty CustomBrushesProperty Field Value DependencyProperty ExternalFileLoaderProperty public static readonly DependencyProperty ExternalFileLoaderProperty Field Value DependencyProperty FileSourceProperty public static readonly DependencyProperty FileSourceProperty Field Value DependencyProperty ImageSourcePoperty public static DependencyProperty ImageSourcePoperty Field Value DependencyProperty OverrideColorProperty public static readonly DependencyProperty OverrideColorProperty Field Value DependencyProperty OverrideStrokeWidthProperty public static readonly DependencyProperty OverrideStrokeWidthProperty Field Value DependencyProperty SizeTypeProperty public static DependencyProperty SizeTypeProperty Field Value DependencyProperty SourceProperty public static readonly DependencyProperty SourceProperty Field Value DependencyProperty UriSourceProperty Identifies the UriSource dependency property. public static readonly DependencyProperty UriSourceProperty Field Value DependencyProperty UseAnimationsProperty public static readonly DependencyProperty UseAnimationsProperty Field Value DependencyProperty Properties BaseUri Gets or sets the base URI of the current application context. public Uri BaseUri { get; set; } Property Value Uri The base URI of the application context. CustomBrushes public Dictionary<string, Brush> CustomBrushes { get; set; } Property Value Dictionary<string, Brush> ExternalFileLoader public IExternalFileLoader ExternalFileLoader { get; set; } Property Value IExternalFileLoader FileSource public string FileSource { get; set; } Property Value string ImageSource public Drawing ImageSource { get; set; } Property Value Drawing OverrideColor public Color? OverrideColor { get; set; } Property Value Color? OverrideStrokeWidth public double? OverrideStrokeWidth { get; set; } Property Value double? SVG public SVG SVG { get; } Property Value SVG SizeType public SVGImage.eSizeType SizeType { get; set; } Property Value SVGImage.eSizeType Source public string Source { get; set; } Property Value string UriSource Gets or sets the path to the SVG file to load into this Canvas. public Uri UriSource { get; set; } Property Value Uri A Uri specifying the path to the SVG source file. The file can be located on a computer, network or assembly resources. Settings this to null will close any opened diagram. Remarks This is the same as the Source property, and added for consistency. See Also UriSource UseAnimations public bool UseAnimations { get; set; } Property Value bool Methods ArrangeOverride(Size) Called to arrange and size the content of a Control object. protected override Size ArrangeOverride(Size arrangeBounds) Parameters arrangeBounds Size The computed size that is used to arrange the content. Returns Size The size of the control. MeasureOverride(Size) Called to remeasure a control. protected override Size MeasureOverride(Size constraint) Parameters constraint Size The maximum size that the method can return. Returns Size The size of the control, up to the maximum specified by constraint. OnInitialized(EventArgs) Raises the Initialized event. This method is invoked whenever IsInitialized is set to true internally. protected override void OnInitialized(EventArgs e) Parameters e EventArgs The RoutedEventArgs that contains the event data. OnRender(DrawingContext) When overridden in a derived class, participates in rendering operations that are directed by the layout system. The rendering instructions for this element are not used directly when this method is invoked, and are instead preserved for later asynchronous use by layout and drawing. protected override void OnRender(DrawingContext dc) Parameters dc DrawingContext OnRenderSizeChanged(SizeChangedInfo) Raises the SizeChanged event, using the specified information as part of the eventual event data. protected override void OnRenderSizeChanged(SizeChangedInfo sizeInfo) Parameters sizeInfo SizeChangedInfo Details of the old and new size involved in the change. ReRenderSvg() public void ReRenderSvg() SetImage(Stream) public void SetImage(Stream stream) Parameters stream Stream SetImage(string) public void SetImage(string svgFilename) Parameters svgFilename string SetImage(Uri) public void SetImage(Uri uriSource) Parameters uriSource Uri SetImage(Drawing) public void SetImage(Drawing drawing) Parameters drawing Drawing"
  },
  "api/SVGImage.SVG.SVGRender.html": {
    "href": "api/SVGImage.SVG.SVGRender.html",
    "title": "Class SVGRender | SVGImage Documentation",
    "keywords": "Class SVGRender Namespace SVGImage.SVG Assembly DotNetProjects.SVGImage.dll This is the class that creates the WPF Drawing object based on the information from the SVG class. public class SVGRender Inheritance object SVGRender Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SVGRender() public SVGRender() See Also http://www.w3.org/TR/SVGTiny12/ http://commons.oreilly.com/wiki/index.php/SVG_Essentials SVGRender(IExternalFileLoader) public SVGRender(IExternalFileLoader fileLoader) Parameters fileLoader IExternalFileLoader See Also http://www.w3.org/TR/SVGTiny12/ http://commons.oreilly.com/wiki/index.php/SVG_Essentials Properties CustomBrushes public Dictionary<string, Brush> CustomBrushes { get; set; } Property Value Dictionary<string, Brush> See Also http://www.w3.org/TR/SVGTiny12/ http://commons.oreilly.com/wiki/index.php/SVG_Essentials ExternalFileLoader public IExternalFileLoader ExternalFileLoader { get; set; } Property Value IExternalFileLoader See Also http://www.w3.org/TR/SVGTiny12/ http://commons.oreilly.com/wiki/index.php/SVG_Essentials OverrideColor public Color? OverrideColor { get; set; } Property Value Color? See Also http://www.w3.org/TR/SVGTiny12/ http://commons.oreilly.com/wiki/index.php/SVG_Essentials OverrideStrokeWidth public double? OverrideStrokeWidth { get; set; } Property Value double? See Also http://www.w3.org/TR/SVGTiny12/ http://commons.oreilly.com/wiki/index.php/SVG_Essentials SVG public SVG SVG { get; } Property Value SVG See Also http://www.w3.org/TR/SVGTiny12/ http://commons.oreilly.com/wiki/index.php/SVG_Essentials UseAnimations public bool UseAnimations { get; set; } Property Value bool See Also http://www.w3.org/TR/SVGTiny12/ http://commons.oreilly.com/wiki/index.php/SVG_Essentials Methods CreateDrawing(SVG) public DrawingGroup CreateDrawing(SVG svg) Parameters svg SVG Returns DrawingGroup See Also http://www.w3.org/TR/SVGTiny12/ http://commons.oreilly.com/wiki/index.php/SVG_Essentials CreateDrawing(Shape) public DrawingGroup CreateDrawing(Shape shape) Parameters shape Shape Returns DrawingGroup See Also http://www.w3.org/TR/SVGTiny12/ http://commons.oreilly.com/wiki/index.php/SVG_Essentials LoadDrawing(Stream) public DrawingGroup LoadDrawing(Stream stream) Parameters stream Stream Returns DrawingGroup See Also http://www.w3.org/TR/SVGTiny12/ http://commons.oreilly.com/wiki/index.php/SVG_Essentials LoadDrawing(TextReader) public DrawingGroup LoadDrawing(TextReader txtReader) Parameters txtReader TextReader Returns DrawingGroup See Also http://www.w3.org/TR/SVGTiny12/ http://commons.oreilly.com/wiki/index.php/SVG_Essentials LoadDrawing(string) public DrawingGroup LoadDrawing(string filename) Parameters filename string Returns DrawingGroup See Also http://www.w3.org/TR/SVGTiny12/ http://commons.oreilly.com/wiki/index.php/SVG_Essentials LoadDrawing(Uri) public DrawingGroup LoadDrawing(Uri fileUri) Parameters fileUri Uri Returns DrawingGroup See Also http://www.w3.org/TR/SVGTiny12/ http://commons.oreilly.com/wiki/index.php/SVG_Essentials LoadDrawing(XmlReader) public DrawingGroup LoadDrawing(XmlReader xmlReader) Parameters xmlReader XmlReader Returns DrawingGroup See Also http://www.w3.org/TR/SVGTiny12/ http://commons.oreilly.com/wiki/index.php/SVG_Essentials LoadXmlDrawing(string) public DrawingGroup LoadXmlDrawing(string fileXml) Parameters fileXml string Returns DrawingGroup See Also http://www.w3.org/TR/SVGTiny12/ http://commons.oreilly.com/wiki/index.php/SVG_Essentials See Also http://www.w3.org/TR/SVGTiny12/ http://commons.oreilly.com/wiki/index.php/SVG_Essentials"
  },
  "api/SVGImage.SVG.Shapes.CircleShape.html": {
    "href": "api/SVGImage.SVG.Shapes.CircleShape.html",
    "title": "Class CircleShape | SVGImage Documentation",
    "keywords": "Class CircleShape Namespace SVGImage.SVG.Shapes Assembly DotNetProjects.SVGImage.dll public sealed class CircleShape : Shape Inheritance object ClipArtElement Shape CircleShape Inherited Members Shape.Display Shape.PaintServerKey Shape.RequiredExtensions Shape.RequiredFeatures Shape.Visibility Shape.Stroke Shape.Fill Shape.TextStyle Shape.Opacity Shape.Transform Shape.Parent Shape.ToString() ClipArtElement.Id object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors CircleShape(SVG, XmlNode) public CircleShape(SVG svg, XmlNode node) Parameters svg SVG node XmlNode Properties CX public double CX { get; set; } Property Value double CY public double CY { get; set; } Property Value double R public double R { get; set; } Property Value double"
  },
  "api/SVGImage.SVG.Shapes.Clip.html": {
    "href": "api/SVGImage.SVG.Shapes.Clip.html",
    "title": "Class Clip | SVGImage Documentation",
    "keywords": "Class Clip Namespace SVGImage.SVG.Shapes Assembly DotNetProjects.SVGImage.dll public sealed class Clip : Group Inheritance object ClipArtElement Shape Group Clip Inherited Members Group.Elements Group.IsSwitch Group.AddToList(SVG, List<Shape>, XmlNode, Shape) Shape.Display Shape.PaintServerKey Shape.RequiredExtensions Shape.RequiredFeatures Shape.Visibility Shape.Stroke Shape.Fill Shape.TextStyle Shape.Opacity Shape.Transform Shape.Parent Shape.ToString() ClipArtElement.Id object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors Clip(SVG, XmlNode, Shape) public Clip(SVG svg, XmlNode node, Shape parent) Parameters svg SVG node XmlNode parent Shape Properties ClipGeometry public Geometry ClipGeometry { get; } Property Value Geometry"
  },
  "api/SVGImage.SVG.Shapes.EllipseShape.html": {
    "href": "api/SVGImage.SVG.Shapes.EllipseShape.html",
    "title": "Class EllipseShape | SVGImage Documentation",
    "keywords": "Class EllipseShape Namespace SVGImage.SVG.Shapes Assembly DotNetProjects.SVGImage.dll public sealed class EllipseShape : Shape Inheritance object ClipArtElement Shape EllipseShape Inherited Members Shape.Display Shape.PaintServerKey Shape.RequiredExtensions Shape.RequiredFeatures Shape.Visibility Shape.Stroke Shape.Fill Shape.TextStyle Shape.Opacity Shape.Transform Shape.Parent Shape.ToString() ClipArtElement.Id object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors EllipseShape(SVG, XmlNode) public EllipseShape(SVG svg, XmlNode node) Parameters svg SVG node XmlNode Properties CX public double CX { get; set; } Property Value double CY public double CY { get; set; } Property Value double RX public double RX { get; set; } Property Value double RY public double RY { get; set; } Property Value double"
  },
  "api/SVGImage.SVG.Shapes.Group.html": {
    "href": "api/SVGImage.SVG.Shapes.Group.html",
    "title": "Class Group | SVGImage Documentation",
    "keywords": "Class Group Namespace SVGImage.SVG.Shapes Assembly DotNetProjects.SVGImage.dll public class Group : Shape Inheritance object ClipArtElement Shape Group Derived Filter Clip Inherited Members Shape.m_fill Shape.m_stroke Shape.m_textstyle Shape.m_localStyle Shape.Display Shape.PaintServerKey Shape.RequiredExtensions Shape.RequiredFeatures Shape.Visibility Shape.Stroke Shape.Fill Shape.TextStyle Shape.Opacity Shape.Transform Shape.Parent Shape.ParseAtStart(SVG, XmlNode) Shape.ParseLocalStyle(SVG) Shape.Parse(SVG, string, string) Shape.GetFill(SVG) Shape.GetTextStyle(SVG) Shape.ToString() ClipArtElement.Id object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Group(SVG, XmlNode, Shape) public Group(SVG svg, XmlNode node, Shape parent) Parameters svg SVG node XmlNode parent Shape Properties Elements public IList<Shape> Elements { get; } Property Value IList<Shape> IsSwitch public bool IsSwitch { get; set; } Property Value bool Methods AddToList(SVG, List<Shape>, XmlNode, Shape) public static Shape AddToList(SVG svg, List<Shape> list, XmlNode childnode, Shape parent) Parameters svg SVG list List<Shape> childnode XmlNode parent Shape Returns Shape"
  },
  "api/SVGImage.SVG.Shapes.ImageShape.html": {
    "href": "api/SVGImage.SVG.Shapes.ImageShape.html",
    "title": "Class ImageShape | SVGImage Documentation",
    "keywords": "Class ImageShape Namespace SVGImage.SVG.Shapes Assembly DotNetProjects.SVGImage.dll public sealed class ImageShape : Shape Inheritance object ClipArtElement Shape ImageShape Inherited Members Shape.Display Shape.PaintServerKey Shape.RequiredExtensions Shape.RequiredFeatures Shape.Visibility Shape.Stroke Shape.Fill Shape.TextStyle Shape.Opacity Shape.Transform Shape.Parent Shape.ToString() ClipArtElement.Id object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors ImageShape(SVG, XmlNode) public ImageShape(SVG svg, XmlNode node) Parameters svg SVG node XmlNode Properties Height public double Height { get; set; } Property Value double ImageSource public ImageSource ImageSource { get; } Property Value ImageSource Width public double Width { get; set; } Property Value double X public double X { get; set; } Property Value double Y public double Y { get; set; } Property Value double"
  },
  "api/SVGImage.SVG.Shapes.LineShape.html": {
    "href": "api/SVGImage.SVG.Shapes.LineShape.html",
    "title": "Class LineShape | SVGImage Documentation",
    "keywords": "Class LineShape Namespace SVGImage.SVG.Shapes Assembly DotNetProjects.SVGImage.dll public sealed class LineShape : Shape Inheritance object ClipArtElement Shape LineShape Inherited Members Shape.Display Shape.PaintServerKey Shape.RequiredExtensions Shape.RequiredFeatures Shape.Visibility Shape.Stroke Shape.Fill Shape.TextStyle Shape.Opacity Shape.Transform Shape.Parent Shape.ToString() ClipArtElement.Id object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors LineShape(SVG, XmlNode) public LineShape(SVG svg, XmlNode node) Parameters svg SVG node XmlNode Properties P1 public Point P1 { get; } Property Value Point P2 public Point P2 { get; } Property Value Point"
  },
  "api/SVGImage.SVG.Shapes.PolygonShape.html": {
    "href": "api/SVGImage.SVG.Shapes.PolygonShape.html",
    "title": "Class PolygonShape | SVGImage Documentation",
    "keywords": "Class PolygonShape Namespace SVGImage.SVG.Shapes Assembly DotNetProjects.SVGImage.dll public sealed class PolygonShape : Shape Inheritance object ClipArtElement Shape PolygonShape Inherited Members Shape.Display Shape.PaintServerKey Shape.RequiredExtensions Shape.RequiredFeatures Shape.Visibility Shape.Stroke Shape.TextStyle Shape.Opacity Shape.Transform Shape.Parent Shape.ToString() ClipArtElement.Id object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors PolygonShape(SVG, XmlNode) public PolygonShape(SVG svg, XmlNode node) Parameters svg SVG node XmlNode Properties Fill public override Fill Fill { get; } Property Value Fill Points public Point[] Points { get; } Property Value Point[]"
  },
  "api/SVGImage.SVG.Shapes.PolylineShape.html": {
    "href": "api/SVGImage.SVG.Shapes.PolylineShape.html",
    "title": "Class PolylineShape | SVGImage Documentation",
    "keywords": "Class PolylineShape Namespace SVGImage.SVG.Shapes Assembly DotNetProjects.SVGImage.dll public sealed class PolylineShape : Shape Inheritance object ClipArtElement Shape PolylineShape Inherited Members Shape.Display Shape.PaintServerKey Shape.RequiredExtensions Shape.RequiredFeatures Shape.Visibility Shape.Stroke Shape.Fill Shape.TextStyle Shape.Opacity Shape.Transform Shape.Parent Shape.ToString() ClipArtElement.Id object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors PolylineShape(SVG, XmlNode) public PolylineShape(SVG svg, XmlNode node) Parameters svg SVG node XmlNode Properties Points public Point[] Points { get; } Property Value Point[]"
  },
  "api/SVGImage.SVG.Shapes.RectangleShape.html": {
    "href": "api/SVGImage.SVG.Shapes.RectangleShape.html",
    "title": "Class RectangleShape | SVGImage Documentation",
    "keywords": "Class RectangleShape Namespace SVGImage.SVG.Shapes Assembly DotNetProjects.SVGImage.dll public sealed class RectangleShape : Shape Inheritance object ClipArtElement Shape RectangleShape Inherited Members Shape.Display Shape.PaintServerKey Shape.RequiredExtensions Shape.RequiredFeatures Shape.Visibility Shape.Stroke Shape.TextStyle Shape.Opacity Shape.Transform Shape.Parent Shape.ToString() ClipArtElement.Id object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors RectangleShape(SVG, XmlNode) public RectangleShape(SVG svg, XmlNode node) Parameters svg SVG node XmlNode Properties Fill public override Fill Fill { get; } Property Value Fill Height public double Height { get; set; } Property Value double RX public double RX { get; set; } Property Value double RY public double RY { get; set; } Property Value double Width public double Width { get; set; } Property Value double X public double X { get; set; } Property Value double Y public double Y { get; set; } Property Value double Methods Parse(SVG, string, string) protected override void Parse(SVG svg, string name, string value) Parameters svg SVG name string value string"
  },
  "api/SVGImage.SVG.Shapes.Shape.html": {
    "href": "api/SVGImage.SVG.Shapes.Shape.html",
    "title": "Class Shape | SVGImage Documentation",
    "keywords": "Class Shape Namespace SVGImage.SVG.Shapes Assembly DotNetProjects.SVGImage.dll public class Shape : ClipArtElement Inheritance object ClipArtElement Shape Derived AnimationBase FilterBaseFe PathShape CircleShape EllipseShape Group ImageShape LineShape PolygonShape PolylineShape RectangleShape UseShape TextShape TextSpan Inherited Members ClipArtElement.Id object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors Shape(SVG, List<StyleItem>, Shape) public Shape(SVG svg, List<StyleItem> attrs, Shape parent) Parameters svg SVG attrs List<StyleItem> parent Shape Shape(SVG, XmlNode) public Shape(SVG svg, XmlNode node) Parameters svg SVG node XmlNode Shape(SVG, XmlNode, Shape) public Shape(SVG svg, XmlNode node, Shape parent) Parameters svg SVG node XmlNode parent Shape Fields Display public bool Display Field Value bool m_fill protected Fill m_fill Field Value Fill m_localStyle protected string m_localStyle Field Value string m_stroke protected Stroke m_stroke Field Value Stroke m_textstyle protected TextStyle m_textstyle Field Value TextStyle Properties Fill public virtual Fill Fill { get; set; } Property Value Fill Opacity public double Opacity { get; set; } Property Value double PaintServerKey public virtual string PaintServerKey { get; set; } Property Value string Parent public Shape Parent { get; set; } Property Value Shape RequiredExtensions public string RequiredExtensions { get; set; } Property Value string RequiredFeatures public string RequiredFeatures { get; set; } Property Value string Stroke public virtual Stroke Stroke { get; set; } Property Value Stroke TextStyle public virtual TextStyle TextStyle { get; } Property Value TextStyle Transform public virtual Transform Transform { get; } Property Value Transform Visibility public Visibility Visibility { get; set; } Property Value Visibility Methods GetFill(SVG) protected Fill GetFill(SVG svg) Parameters svg SVG Returns Fill GetTextStyle(SVG) protected TextStyle GetTextStyle(SVG svg) Parameters svg SVG Returns TextStyle Parse(SVG, string, string) protected virtual void Parse(SVG svg, string name, string value) Parameters svg SVG name string value string ParseAtStart(SVG, XmlNode) protected virtual void ParseAtStart(SVG svg, XmlNode node) Parameters svg SVG node XmlNode ParseLocalStyle(SVG) protected virtual void ParseLocalStyle(SVG svg) Parameters svg SVG ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/SVGImage.SVG.Shapes.UseShape.html": {
    "href": "api/SVGImage.SVG.Shapes.UseShape.html",
    "title": "Class UseShape | SVGImage Documentation",
    "keywords": "Class UseShape Namespace SVGImage.SVG.Shapes Assembly DotNetProjects.SVGImage.dll public sealed class UseShape : Shape Inheritance object ClipArtElement Shape UseShape Inherited Members Shape.Display Shape.PaintServerKey Shape.RequiredExtensions Shape.RequiredFeatures Shape.Visibility Shape.Stroke Shape.Fill Shape.TextStyle Shape.Opacity Shape.Transform Shape.Parent Shape.ToString() ClipArtElement.Id object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors UseShape(SVG, XmlNode) public UseShape(SVG svg, XmlNode node) Parameters svg SVG node XmlNode Properties X public double X { get; set; } Property Value double Y public double Y { get; set; } Property Value double hRef public string hRef { get; set; } Property Value string Methods Parse(SVG, string, string) protected override void Parse(SVG svg, string name, string value) Parameters svg SVG name string value string"
  },
  "api/SVGImage.SVG.Shapes.html": {
    "href": "api/SVGImage.SVG.Shapes.html",
    "title": "Namespace SVGImage.SVG.Shapes | SVGImage Documentation",
    "keywords": "Namespace SVGImage.SVG.Shapes Classes CircleShape Clip EllipseShape Group ImageShape LineShape PolygonShape PolylineShape RectangleShape Shape UseShape"
  },
  "api/SVGImage.SVG.Stroke.eLineCap.html": {
    "href": "api/SVGImage.SVG.Stroke.eLineCap.html",
    "title": "Enum Stroke.eLineCap | SVGImage Documentation",
    "keywords": "Enum Stroke.eLineCap Namespace SVGImage.SVG Assembly DotNetProjects.SVGImage.dll public enum Stroke.eLineCap Fields butt = 0 round = 1 square = 2"
  },
  "api/SVGImage.SVG.Stroke.eLineJoin.html": {
    "href": "api/SVGImage.SVG.Stroke.eLineJoin.html",
    "title": "Enum Stroke.eLineJoin | SVGImage Documentation",
    "keywords": "Enum Stroke.eLineJoin Namespace SVGImage.SVG Assembly DotNetProjects.SVGImage.dll public enum Stroke.eLineJoin Fields bevel = 2 miter = 0 round = 1"
  },
  "api/SVGImage.SVG.Stroke.html": {
    "href": "api/SVGImage.SVG.Stroke.html",
    "title": "Class Stroke | SVGImage Documentation",
    "keywords": "Class Stroke Namespace SVGImage.SVG Assembly DotNetProjects.SVGImage.dll public sealed class Stroke Inheritance object Stroke Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors Stroke(SVG) public Stroke(SVG svg) Parameters svg SVG Properties LineCap public Stroke.eLineCap LineCap { get; set; } Property Value Stroke.eLineCap LineJoin public Stroke.eLineJoin LineJoin { get; set; } Property Value Stroke.eLineJoin Opacity public double Opacity { get; set; } Property Value double PaintServerKey public string PaintServerKey { get; set; } Property Value string StrokeArray public double[] StrokeArray { get; set; } Property Value double[] Width public double Width { get; set; } Property Value double Methods IsEmpty(SVG) public bool IsEmpty(SVG svg) Parameters svg SVG Returns bool StrokeBrush(SVG, SVGRender, Shape, double, Rect) public Brush StrokeBrush(SVG svg, SVGRender svgRender, Shape shape, double elementOpacity, Rect bounds) Parameters svg SVG svgRender SVGRender shape Shape elementOpacity double bounds Rect Returns Brush"
  },
  "api/SVGImage.SVG.StyleItem.html": {
    "href": "api/SVGImage.SVG.StyleItem.html",
    "title": "Class StyleItem | SVGImage Documentation",
    "keywords": "Class StyleItem Namespace SVGImage.SVG Assembly DotNetProjects.SVGImage.dll public class StyleItem Inheritance object StyleItem Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors StyleItem(string, string) public StyleItem(string name, string value) Parameters name string value string Properties Name public string Name { get; set; } Property Value string Value public string Value { get; set; } Property Value string Methods ReadNextAttr(string, ref int) public static StyleItem ReadNextAttr(string inputstring, ref int startpos) Parameters inputstring string startpos int Returns StyleItem ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/SVGImage.SVG.SvgIconBase.html": {
    "href": "api/SVGImage.SVG.SvgIconBase.html",
    "title": "Class SvgIconBase | SVGImage Documentation",
    "keywords": "Class SvgIconBase Namespace SVGImage.SVG Assembly DotNetProjects.SVGImage.dll This is an abstract implementation of a markup extension that enables the creation of DrawingImage from SVG sources. public abstract class SvgIconBase : MarkupExtension Inheritance object MarkupExtension SvgIconBase Derived SvgIconConverterExtension SvgIconExtension Inherited Members MarkupExtension.ProvideValue(IServiceProvider) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors SvgIconBase() Initializes a new instance of the SvgIconBase class with the default parameters. protected SvgIconBase() Fields _appName protected string _appName Field Value string _culture protected CultureInfo _culture Field Value CultureInfo Properties AppName Gets or sets the project or application name of the target assembly. public string AppName { get; set; } Property Value string A string specifying the application project name. Remarks This is optional and is only used to resolve the resource Uri at the design time. CultureInfo Gets or sets the main culture information used for rendering texts. public CultureInfo CultureInfo { get; set; } Property Value CultureInfo An instance of the CultureInfo specifying the main culture information for texts. The default is the English culture. Remarks This is the culture information passed to the FormattedText class instance for the text rendering. The library does not currently provide any means of splitting texts into its multi-language parts. OverrideColor public Color? OverrideColor { get; set; } Property Value Color? Methods GetAppName() protected void GetAppName() GetDrawing(Uri) This converts the SVG resource specified by the Uri to DrawingGroup. protected virtual DrawingGroup GetDrawing(Uri svgSource) Parameters svgSource Uri A Uri specifying the source of the SVG resource. Returns DrawingGroup A DrawingGroup of the converted SVG resource. GetEntryAssembly() protected Assembly GetEntryAssembly() Returns Assembly GetExecutingAssembly() protected Assembly GetExecutingAssembly() Returns Assembly GetImage(Uri) This converts the SVG resource specified by the Uri to DrawingImage. protected virtual DrawingImage GetImage(Uri svgSource) Parameters svgSource Uri A Uri specifying the source of the SVG resource. Returns DrawingImage A DrawingImage of the converted SVG resource. Remarks This uses the GetDrawing(Uri) method to convert the SVG resource to DrawingGroup, which is then wrapped in DrawingImage."
  },
  "api/SVGImage.SVG.SvgIconConverterExtension.html": {
    "href": "api/SVGImage.SVG.SvgIconConverterExtension.html",
    "title": "Class SvgIconConverterExtension | SVGImage Documentation",
    "keywords": "Class SvgIconConverterExtension Namespace SVGImage.SVG Assembly DotNetProjects.SVGImage.dll This implements a markup extension that enables the creation of DrawingImage from SVG sources. public sealed class SvgIconConverterExtension : SvgIconBase, IValueConverter Inheritance object MarkupExtension SvgIconBase SvgIconConverterExtension Implements IValueConverter Inherited Members SvgIconBase.OverrideColor SvgIconBase.CultureInfo SvgIconBase.AppName object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Remarks The SVG source file can be: From the web From the local computer (relative or absolute paths) From the resources. The rendering settings are provided as properties for customizations. Constructors SvgIconConverterExtension() Initializes a new instance of the SvgIconConverterExtension class with the default parameters. public SvgIconConverterExtension() SvgIconConverterExtension(Uri) public SvgIconConverterExtension(Uri baseUri) Parameters baseUri Uri Methods Convert(object, Type, object, CultureInfo) Converts a value. public object Convert(object value, Type targetType, object parameter, CultureInfo culture) Parameters value object The value produced by the binding source. targetType Type The type of the binding target property. parameter object The converter parameter to use. culture CultureInfo The culture to use in the converter. Returns object A converted value. If the method returns null, the valid null value is used. ConvertBack(object, Type, object, CultureInfo) Converts a value. public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture) Parameters value object The value that is produced by the binding target. targetType Type The type to convert to. parameter object The converter parameter to use. culture CultureInfo The culture to use in the converter. Returns object A converted value. If the method returns null, the valid null value is used. ProvideValue(IServiceProvider) Performs the conversion of a valid SVG source file to the DrawingImage that is set as the value of the target property for this markup extension. public override object ProvideValue(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider Object that can provide services for the markup extension. Returns object This returns DrawingImage if successful; otherwise, it returns null."
  },
  "api/SVGImage.SVG.SvgIconExtension.html": {
    "href": "api/SVGImage.SVG.SvgIconExtension.html",
    "title": "Class SvgIconExtension | SVGImage Documentation",
    "keywords": "Class SvgIconExtension Namespace SVGImage.SVG Assembly DotNetProjects.SVGImage.dll This implements a markup extension that enables the creation of DrawingImage from SVG sources. public sealed class SvgIconExtension : SvgIconBase Inheritance object MarkupExtension SvgIconBase SvgIconExtension Inherited Members SvgIconBase.OverrideColor SvgIconBase.CultureInfo SvgIconBase.AppName object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Remarks The SVG source file can be: From the web From the local computer (relative or absolute paths) From the resources. The rendering settings are provided as properties for customizations. Constructors SvgIconExtension() Initializes a new instance of the SvgIconExtension class with the default parameters. public SvgIconExtension() SvgIconExtension(string) Initializes a new instance of the SvgIconExtension class with the specified SVG file path. public SvgIconExtension(string svgPath) Parameters svgPath string Properties Source Gets or sets the SVG source file. public string Source { get; set; } Property Value string A string specifying the path of the SVG source file. The default is null. Methods ProvideValue(IServiceProvider) Performs the conversion of a valid SVG source file to the DrawingImage that is set as the value of the target property for this markup extension. public override object ProvideValue(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider Object that can provide services for the markup extension. Returns object This returns DrawingImage if successful; otherwise, it returns null."
  },
  "api/SVGImage.SVG.TextShape.html": {
    "href": "api/SVGImage.SVG.TextShape.html",
    "title": "Class TextShape | SVGImage Documentation",
    "keywords": "Class TextShape Namespace SVGImage.SVG Assembly DotNetProjects.SVGImage.dll public sealed class TextShape : Shape Inheritance object ClipArtElement Shape TextShape Inherited Members Shape.Display Shape.PaintServerKey Shape.RequiredExtensions Shape.RequiredFeatures Shape.Visibility Shape.TextStyle Shape.Opacity Shape.Transform Shape.Parent Shape.ToString() ClipArtElement.Id object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors TextShape(SVG, XmlNode, Shape) public TextShape(SVG svg, XmlNode node, Shape parent) Parameters svg SVG node XmlNode parent Shape Properties Fill public override Fill Fill { get; } Property Value Fill Stroke public override Stroke Stroke { get; } Property Value Stroke Text public string Text { get; set; } Property Value string TextSpan public TextSpan TextSpan { get; } Property Value TextSpan X public double X { get; set; } Property Value double Y public double Y { get; set; } Property Value double"
  },
  "api/SVGImage.SVG.TextSpan.eElementType.html": {
    "href": "api/SVGImage.SVG.TextSpan.eElementType.html",
    "title": "Enum TextSpan.eElementType | SVGImage Documentation",
    "keywords": "Enum TextSpan.eElementType Namespace SVGImage.SVG Assembly DotNetProjects.SVGImage.dll public enum TextSpan.eElementType Fields Tag = 0 Text = 1"
  },
  "api/SVGImage.SVG.TextSpan.html": {
    "href": "api/SVGImage.SVG.TextSpan.html",
    "title": "Class TextSpan | SVGImage Documentation",
    "keywords": "Class TextSpan Namespace SVGImage.SVG Assembly DotNetProjects.SVGImage.dll public class TextSpan : Shape Inheritance object ClipArtElement Shape TextSpan Inherited Members Shape.m_fill Shape.m_stroke Shape.m_textstyle Shape.m_localStyle Shape.Display Shape.PaintServerKey Shape.RequiredExtensions Shape.RequiredFeatures Shape.Visibility Shape.Stroke Shape.Fill Shape.TextStyle Shape.Opacity Shape.Parent Shape.ParseAtStart(SVG, XmlNode) Shape.ParseLocalStyle(SVG) Shape.Parse(SVG, string, string) Shape.GetFill(SVG) Shape.GetTextStyle(SVG) ClipArtElement.Id object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TextSpan(SVG, Shape, eElementType, List<StyleItem>) public TextSpan(SVG svg, Shape parent, TextSpan.eElementType eType, List<StyleItem> attrs) Parameters svg SVG parent Shape eType TextSpan.eElementType attrs List<StyleItem> TextSpan(SVG, Shape, string) public TextSpan(SVG svg, Shape parent, string text) Parameters svg SVG parent Shape text string Properties Attributes public List<StyleItem> Attributes { get; set; } Property Value List<StyleItem> Children public List<TextSpan> Children { get; } Property Value List<TextSpan> ElementType public TextSpan.eElementType ElementType { get; } Property Value TextSpan.eElementType End public TextSpan End { get; set; } Property Value TextSpan StartIndex public int StartIndex { get; set; } Property Value int Text public string Text { get; set; } Property Value string Transform public override Transform Transform { get; } Property Value Transform Methods Parse(SVG, string, TextShape) public static TextSpan Parse(SVG svg, string text, TextShape owner) Parameters svg SVG text string owner TextShape Returns TextSpan Print(TextSpan, string) public static void Print(TextSpan tag, string indent) Parameters tag TextSpan indent string ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/SVGImage.SVG.TextStyle.html": {
    "href": "api/SVGImage.SVG.TextStyle.html",
    "title": "Class TextStyle | SVGImage Documentation",
    "keywords": "Class TextStyle Namespace SVGImage.SVG Assembly DotNetProjects.SVGImage.dll public sealed class TextStyle Inheritance object TextStyle Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors TextStyle(SVG, Shape) public TextStyle(SVG svg, Shape owner) Parameters svg SVG owner Shape TextStyle(TextStyle) public TextStyle(TextStyle aCopy) Parameters aCopy TextStyle Properties BaseLineShift public string BaseLineShift { get; set; } Property Value string FontFamily public string FontFamily { get; set; } Property Value string FontSize public double FontSize { get; set; } Property Value double Fontstyle public FontStyle Fontstyle { get; set; } Property Value FontStyle Fontweight public FontWeight Fontweight { get; set; } Property Value FontWeight LetterSpacing public double LetterSpacing { get; set; } Property Value double TextAlignment public TextAlignment TextAlignment { get; set; } Property Value TextAlignment TextDecoration public TextDecorationCollection TextDecoration { get; set; } Property Value TextDecorationCollection WordSpacing public double WordSpacing { get; set; } Property Value double Methods Copy(TextStyle) public void Copy(TextStyle aCopy) Parameters aCopy TextStyle"
  },
  "api/SVGImage.SVG.Visibility.html": {
    "href": "api/SVGImage.SVG.Visibility.html",
    "title": "Enum Visibility | SVGImage Documentation",
    "keywords": "Enum Visibility Namespace SVGImage.SVG Assembly DotNetProjects.SVGImage.dll public enum Visibility Fields Hidden = 1 Visible = 0"
  },
  "api/SVGImage.SVG.html": {
    "href": "api/SVGImage.SVG.html",
    "title": "Namespace SVGImage.SVG | SVGImage Documentation",
    "keywords": "Namespace SVGImage.SVG Classes ClipArtElement Fill PathShape SVG This is the class that reads and parses the XML file. SVGImage This is the SVG image view control. The image control can either load the image from a file SetImage(string) or by setting the Drawing object through SetImage(Drawing), which allows multiple controls to share the same drawing instance. SVGRender This is the class that creates the WPF Drawing object based on the information from the SVG class. Stroke StyleItem SvgIconBase This is an abstract implementation of a markup extension that enables the creation of DrawingImage from SVG sources. SvgIconConverterExtension This implements a markup extension that enables the creation of DrawingImage from SVG sources. SvgIconExtension This implements a markup extension that enables the creation of DrawingImage from SVG sources. TextShape TextSpan TextStyle Enums Fill.eFillRule SVGImage.eSizeType This controls how the image is stretched to fill the control, Stroke.eLineCap Stroke.eLineJoin TextSpan.eElementType Visibility"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "SVGImage API Reference | SVGImage Documentation",
    "keywords": "SVGImage API Reference Namespaces SVGImage.SVG The namespace containing the SVG controls. SVGImage.SVG.Animation The SVG animation elements namespace. SVGImage.SVG.FileLoaders A namespace defining interfaces for loading external documents and resources. SVGImage.SVG.Filters A namespace defining some of the SVG filters. SVGImage.SVG.PaintServers The namespace defining SVG paint servers. SVGImage.SVG.Shapes The namespace defining the geometric and related SVG shapes."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Introduction | SVGImage Documentation",
    "keywords": "Introduction SVG (Scalable Vector Graphic) is an XML based graphic format. This little project started out as a simple SVG to XAML converter. I looked at some simple SVG files and noticed the similarity to XAML defined graphic, and decided to write a converter. However, I soon realized that SVG is a very complex format, and at the same time, I found no good reason for converting to XAML just to show the image on the screen, so instead, I started working on the SVG, SVGRender and the SVGImage classes. The SVG class is the class that reads and parses the XML file. SVGRender is the class that creates the WPF Drawing object based on the information from the SVG class. SVGImage is the image control. The image control can either load the image from a filename SetImage(filename) or by setting the Drawing object through SetImage(Drawing), which allows multiple controls to share the same drawing instance. The control only has a couple of properties, SizeType and ImageSource. SizeType - controls how the image is stretched to fill the control None: The image is not scaled. The image location is translated so the top left corner of the image bounding box is moved to the top left corner of the image control. ContentToSizeNoStretch: The image is scaled to fit the control without any stretching. Either X or Y direction will be scaled to fill the entire width or height. ContentToSizeStretch: The image will be stretched to fill the entire width and height. SizeToContent: The control will be resized to fit the un-scaled image. If the image is larger than the max size for the control, the control is set to max size and the image is scaled. ViewBoxToSizeNoStretch: Not the content of the image but its viewbox is scaled to fit the control without any stretching.Either X or Y direction will be scaled to fill the entire width or height. For None and ContentToSizeNoStretch, the Horizontal/VerticalContentAlignment properties can be used to position the image within the control. ImageSource - This property is the same as SetImage(drawing), and is exposed to allow for the source to be set through binding."
  },
  "articles/license.html": {
    "href": "articles/license.html",
    "title": "The MIT License (MIT) | SVGImage Documentation",
    "keywords": "The MIT License (MIT) Copyright (c) 2020-2023 PropertyTools and DotNetProjects contributors Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "index.html": {
    "href": "index.html",
    "title": "SVGImage | SVGImage Documentation",
    "keywords": "SVGImage This is an SVG Image View Control for WPF applications. Initially forked from: SVGImage Control - CodeProject Article Besides the bug fixes, new features are added including the following: Mask/Clip support Support of styles. Simple Animation support. Framework support The SVGImage control library targets the following frameworks .NET Framework, Version 4.0 .NET Framework, Version 4.5 .NET Framework, Version 4.6 .NET Framework, Version 4.7 .NET Framework, Version 4.8 .NET Core, Version 3.1 .NET 6 ~ 7 License The SVGImage control library is relicensed under MIT License, with permission from the original author. Sample Application"
  }
}